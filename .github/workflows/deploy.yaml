name: TgTime Notifier Deploy

on:
    push:
      branches:
        - master
    pull_request:
      branches:
        - master

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
    build:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4

        - name: Set up Go
          uses: actions/setup-go@v4
          with:
            go-version: '1.22.0'

        - name: Build
          run: go build -v ./...

    build-and-push-image:
      needs: build
      runs-on: ubuntu-latest
      permissions:
        contents: read
        packages: write

      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Log in to the Container registry
          uses: docker/login-action@v3
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@v4
          with:
            images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Add config
          run: |
            echo ENV="dev" >> ./.env

        - name: Build and push Docker image
          uses: docker/build-push-action@v5
          with:
            file: ./docker/app/Dockerfile
            context: .
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}

    deploy:
      runs-on: ubuntu-latest
      needs: build-and-push-image
      environment: deploy

      steps:
        #- uses: actions/checkout@v4
        #- name: Log in to the Container registry
        #  uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        #  with:
        #    registry: ${{ env.REGISTRY }}
        #    username: ${{ github.actor }}
        #    password: ${{ secrets.GITHUB_TOKEN }}

        - name: Deploy to server
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.DEPLOY_HOST }}
            username: ${{ secrets.DEPLOY_USER }}
            password: ${{ secrets.DEPLOY_PASSWORD }}
            port: ${{ secrets.DEPLOY_PORT }}
            script: |
              cd /opt/tgtime-notifier
              docker-compose up -d --build --pull=always
              docker-compose ps

        #- name: Run container
        #  run: |
        #    cd /opt/tgtime-notifier
        #    docker-compose up --build --pull=always &