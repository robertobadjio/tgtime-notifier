package telegram

import (
	"context"

	"github.com/robertobadjio/tgtime-notifier/internal/notifier/telegram/command"
)

// Command –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
type Command interface {
	GetMessage(ctx context.Context) (string, error)
}

// MessageType –¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è - –∫–æ–º–∞–Ω–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
type MessageType string

const (
	buttonWorkingTime              MessageType = "‚è≥ –†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è"
	buttonStatCurrentWorkingPeriod MessageType = "üóì –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Ä–∞–±–æ—á–∏–π –ø–µ—Ä–∏–æ–¥"
	buttonStart                    MessageType = "/start"
	welcome                        MessageType = "welcome"
	//previousDayInfo                        MessageType = "previousDayInfo"
)

// NewCommand –§–∞–±—Ä–∏–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
func NewCommand(t MessageType, telegramID int64) Command {
	switch t {
	case buttonStart:
		return command.StartCommand{}
	case buttonWorkingTime:
		return command.WorkingTimeCommand{TelegramID: telegramID}
	case welcome:
		return command.WelcomeCommand{}
	default:
		return command.UnknownCommand{}
	}
}
